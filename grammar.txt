var_assign : LET IDENTIFIER EQUALS expr

var_update : IDENTIFIER EQUALS expr

expr       : comp-expr ((AND | OR) comp-expr)*

comp-expr  : NOT comp-expr
           | arith-expr (== | != | >= | <= | < | >) arith-expr

arith-expr : term ((PLUS|MINUS) term)*

term       : factor ((MUL|DIV) factor)*

factor     : INT|FLOAT
           | PLUS|MINUS factor

power      : atom (POW factor)*

atom       : INT|FLOAT|IDENTIFIER
           | LPAREN expr RPAREN
           | NULL

if_stat    : IF expr { ... }
           | ELSE IF expr { ... }
           | ELSE { ... }

while      : WHILE expr { ... }

create_fn  : FN IDENTIFIER(expr*)

call_fn    : IDENTIFIER(expr*)

use        : USE <IDENTIFIER>
